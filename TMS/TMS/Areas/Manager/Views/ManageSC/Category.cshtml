@using TMS.Utils
@model TMS.Models.Category
@{
    ViewBag.Title = "Manage Category";
    Layout = "~/Areas/Manager/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="~/Content/Plugins/jstree/style.min.css" />
<style>
    div.slider {
        display: none;
    }

    table.dataTable, table.dataTable th, table.dataTable td {
        border-color: black !important;
    }

    table.table-bordered.dataTable > thead > tr > th {
        border-bottom-width: 0 !important;
        background-color: aliceblue;
    }
</style>

<div class="row">
    <div class="col-xs-12">
        <div class="box box-primary">
            <div class="box-body">
                <div class="pull-left" style="margin-bottom: 20px;">
                    <a href="javascript:void(0)" class="btn btn-flat btn-primary" onclick="showCreateCategoryModal()"><i class="fa fa-plus"></i> New Category</a>
                    <a href="javascript:void(0)" class="btn btn-flat btn-primary" onclick="showCreateSubCategoryModal()"><i class="fa fa-plus"></i> New Sub Category</a>
                    <a href="javascript:void(0)" class="btn btn-flat btn-primary" onclick="showCreateItemModal()"><i class="fa fa-plus"></i> New Item</a>
                    <a href="javascript:void(0)" class="btn btn-flat btn-default" onclick="showTreeViewModal()">Tree View</a>
                </div>
                <table class="table table-bordered dataTable" id="category-table">
                    <thead>
                        <tr>
                            <th></th>
                            <th>Name</th>
                            <th>Description</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="category-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Category</h4>
            </div>
            <div class="modal-body">
                <form class="form-horizontal">
                    <div class="form-group">
                        <label class="col-sm-2 control-label">Name&nbsp;<span style="color: red">*</span></label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" placeholder="Name" id="category-name-txt">
                            <p id="category-name-validation-message" class="text-danger" style="display: none"></p>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label">Description</label>
                        <div class="col-sm-10">
                            <textarea class="form-control" rows="3" placeholder="Description" id="category-description-txt"></textarea>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="category-action-btn">Save changes</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="sub-category-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Sub Category</h4>
            </div>
            <div class="modal-body">
                <form class="form-horizontal">
                    <div class="form-group">
                        <label class="col-sm-2 control-label">Name&nbsp;<span style="color: red">*</span></label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" placeholder="Name" id="sub-category-name-txt">
                            <p id="sub-category-name-validation-message" class="text-danger" style="display: none"></p>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label">Description</label>
                        <div class="col-sm-10">
                            <textarea class="form-control" rows="3" placeholder="Description" id="sub-category-description-txt"></textarea>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label">Category&nbsp;<span style="color: red">*</span></label>
                        <div class="col-sm-10">
                            <select id="sub-category-category-dropdown" class="form-control"></select>
                            <p id="sub-category-category-validation-message" class="text-danger" style="display: none"></p>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="sub-category-action-btn">Save changes</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="item-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Item</h4>
            </div>
            <div class="modal-body">
                <form class="form-horizontal">
                    <div class="form-group">
                        <label class="col-sm-3 control-label">Name&nbsp;<span style="color: red">*</span></label>
                        <div class="col-sm-9">
                            <input type="text" class="form-control" placeholder="Name" id="item-name-txt">
                            <p id="item-name-validation-message" class="text-danger" style="display: none"></p>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3 control-label">Description</label>
                        <div class="col-sm-9">
                            <textarea class="form-control" rows="3" placeholder="Description" id="item-description-txt"></textarea>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3 control-label">Sub Category&nbsp;<span style="color: red">*</span></label>
                        <div class="col-sm-9">
                            <select id="item-sub-category-dropdown" class="form-control"></select>
                            <p id="item-sub-category-validation-message" class="text-danger" style="display: none"></p>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="item-action-btn">Save changes</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="delete-modal">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Are you sure?</h4>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="delete-btn">Yes</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="treeview-modal">
    <div class="modal-dialog" style="width: 400px;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Category Tree View</h4>
            </div>
            <div class="modal-body" style="height: 70vh; overflow-y: scroll">
                <div id="category-treeview-div">

                </div>
            </div>
        </div>
    </div>
</div>

@Styles.Render("~/Content/datatables")
@section scripts{
    @Scripts.Render("~/bundles/datatables")
    <script src="~/Content/Plugins/jstree/jstree.min.js"></script>
    <script>
        $("#category-table").DataTable({
            processing: true,
            serverSide: true,
            paging: true,
            sort: true,
            lengthMenu: [10],
            lengthChange: false,
            filter: false,
            language: {
                infoFiltered: ""
            },
            ajax: {
                url: "/Manager/ManageSC/GetCategoriesDataTable"
            },
            order: [[1, 'asc']],
            columnDefs: [
                {
                    "targets": [0],
                    "className": "details-control",
                    "sortable": false,
                    "data": null,
                    "defaultContent": ''
                },
                {
                    "targets": [1],
                    "sortable": true,
                    "render": function (data, type, row) {
                        return row.Name;
                    }
                },
                {
                    "targets": [2],
                    "sortable": false,
                    "render": function (data, type, row) {
                        return row.Description;
                    }
                },
                {
                    "targets": [3],
                    "sortable": false,
                    "render": function (data, type, row) {
                        return '<a href="javascript:void(0)" class="btn btn-xs btn-primary" onclick="showEditCategoryModal(\'' + row.ID + '\')"><i class="fa fa-pencil"></i></a>&nbsp;&nbsp;'
                            + '<a href="javascript:void(0)" class="btn btn-xs btn-primary" onclick="showDeleteModal(\'' + row.ID + '\')"><i class="fa fa-trash-o"></i></a>';
                    }

                }
            ]
        });

        var reloadDataTable = function () {
            var oTable = $("#category-table").dataTable();
            oTable.api().ajax.reload();
        };

        $('#category-table tbody').on('click', 'td.details-control', function () {
            var tr = $(this).closest('tr');
            var table = $(this).closest('table');
            var row = table.dataTable().api().row(tr);

            if (row.child.isShown()) {
                // This row is already open - close it
                $('div.slider', row.child()).slideUp(function () {
                    row.child.hide();
                    tr.removeClass('shown');
                });
            } else {
                var level = row.data().Level;
                var categories = row.data().Categories;
                if (categories.length > 0) {
                    if (level == '@ConstantUtil.CategoryLevel.Category') {
                        var content = "<div class='slider'>";
                        content += "<h4 style='margin: 10px 0px'>Sub Categories</h4>";
                        content += "<table class='table table-bordered dataTable cell-border'>";
                        content += "<thead>";
                        content += "<tr>";
                        content += "<th style='width: 35px'></th>";
                        content += "<th>Name</th>";
                        content += "<th>Description</th>";
                        content += "<th>Action</th>";
                        content += "</tr>";
                        content += "</thead>";
                        content += "<tbody>";
                        content += "</tbody>";
                        content += "</table>";
                        row.child(content).show();
                        tr.next().find("table").DataTable({
                            processing: true,
                            serverSide: false,
                            paging: false,
                            filter: false,
                            info: false,
                            sort: true,
                            lengthChange: false,
                            language: {
                                infoFiltered: ""
                            },
                            data: categories,
                            order: [[1, 'asc']],
                            columnDefs: [
                                {
                                    "targets": [0],
                                    "className": "details-control",
                                    "sortable": false,
                                    "data": null,
                                    "defaultContent": ''
                                },
                                {
                                    "targets": [1],
                                    "sortable": true,
                                    "render": function (data, type, row) {
                                        return row.Name;
                                    }
                                },
                                {
                                    "targets": [2],
                                    "sortable": false,
                                    "render": function (data, type, row) {
                                        return row.Description;
                                    }
                                },
                                {
                                    "targets": [3],
                                    "sortable": false,
                                    "render": function (data, type, row) {
                                        return '<a href="javascript:void(0)" class="btn btn-xs btn-primary" onclick="showEditSubCategoryModal(\'' + row.ID + '\')"><i class="fa fa-pencil"></i></a>&nbsp;&nbsp;'
                                            + '<a href="javascript:void(0)" class="btn btn-xs btn-primary" onclick="showDeleteModal(\'' + row.ID + '\')"><i class="fa fa-trash-o"></i></a>';
                                    }
                                }
                            ]
                        });
                        tr.next().css("background-color", "#f7f7f7");
                    } else if (level == '@ConstantUtil.CategoryLevel.SubCategory') {
                        var content = "<div class='slider'>";
                        content += "<h4 style='margin: 10px 0px'>Items</h4>";
                        content += "<table class='table table-bordered dataTable'>";
                        content += "<thead>";
                        content += "<tr>";
                        content += "<th width='200px'>Name</th>";
                        content += "<th>Description</th>";
                        content += "<th width='100px'>Action</th>";
                        content += "</tr>";
                        content += "</thead>";
                        content += "<tbody>";
                        content += "</tbody>";
                        content += "</table>";
                        row.child(content).show();
                        tr.next().find("table").DataTable({
                            processing: true,
                            serverSide: false,
                            paging: false,
                            filter: false,
                            info: false,
                            sort: true,
                            lengthChange: false,
                            data: categories,
                            order: [[0, 'asc']],
                            columnDefs: [
                                {
                                    "targets": [0],
                                    "sortable": true,
                                    "render": function (data, type, row) {
                                        return row.Name;
                                    }
                                },
                                {
                                    "targets": [1],
                                    "sortable": false,
                                    "render": function (data, type, row) {
                                        return row.Description;
                                    }
                                },
                                {
                                    "targets": [2],
                                    "sortable": false,
                                    "render": function (data, type, row) {
                                        return '<a href="javascript:void(0)" class="btn btn-xs btn-primary" onclick="showEditItemModal(\'' + row.ID + '\')"><i class="fa fa-pencil"></i></a>&nbsp;&nbsp;'
                                            + '<a href="javascript:void(0)" class="btn btn-xs btn-primary" onclick="showDeleteModal(\'' + row.ID + '\')"><i class="fa fa-trash-o"></i></a>';
                                    }

                                }
                            ]
                        });
                        tr.next().css("background-color", "#f0f0f0");
                    }
                } else {
                    if (level == '@ConstantUtil.CategoryLevel.Category') {
                        var content = "<div class='slider'><h4>No sub category available</h4></div>";
                        row.child(content).show();
                        tr.next().css("background-color", "#f7f7f7");
                    } else if (level == '@ConstantUtil.CategoryLevel.SubCategory') {
                        var content = "<div class='slider'><h4>No item available</h4></div>";
                        row.child(content).show();
                        tr.next().css("background-color", "#f0f0f0");
                    }
                }
            }

            tr.addClass('shown');
            $('div.slider', row.child()).slideDown();
        });

        var clearModal = function () {
            $(".modal").find("input").val("");
            $(".modal").find("textarea").val("");
            $(".modal").find(".text-danger").hide();
        };

        var clearValidationError = function () {
            $(".modal").find(".text-danger").hide();
        };

        var showCreateCategoryModal = function () {
            clearModal();
            $("#category-modal").modal('show');
            $('#category-action-btn').attr('onclick', 'createCategory()');
        };

        var showCreateSubCategoryModal = function () {
            clearModal();
            $.ajax({
                url: "/Manager/ManageSC/GetCategories",
                type: "GET",
                dataType: "json",
                success: function (data) {
                    var content = '<option value>--Select Category--</option>';
                    for (i = 0; i < data.data.length; i++) {
                        var row = data.data[i];
                        content += '<option value="' + row.ID + '">' + row.Name + '</option>';
                    }
                    $("#sub-category-category-dropdown").html(content);
                    $("#sub-category-modal").modal('show');
                    $('#sub-category-action-btn').attr('onclick', 'createSubCategory()');
                },
                error: function () {
                    $.notify("Cannot connect to server!", "error");
                }
            });
        };

        var showCreateItemModal = function () {
            clearModal();
            $.ajax({
                url: "/Manager/ManageSC/GetSubCategories",
                type: "GET",
                dataType: "json",
                success: function (data) {
                    var content = '<option value>--Select Sub Category--</option>';
                    for (i = 0; i < data.data.length; i++) {
                        var row = data.data[i];
                        content += '<option value="' + row.ID + '">' + row.Name + '</option>';
                    }
                    $("#item-sub-category-dropdown").html(content);
                    $("#item-modal").modal('show');
                    $('#item-action-btn').attr('onclick', 'createItem()');
                },
                error: function () {
                    $.notify("Cannot connect to server!", "error");
                }
            });
        };

        var createCategory = function () {
            clearValidationError();
            var name = $("#category-name-txt").val();
            var valid = true;
            if (name.trim() === "") {
                $("#category-name-validation-message").html("Name is required!");
                $("#category-name-validation-message").show();
                valid = false;
            }
            if (valid) {
                $.ajax({
                    url: "/Manager/ManageSC/CreateCategory",
                    dataType: "json",
                    type: "POST",
                    data: {
                        Name: $("#category-name-txt").val(),
                        Description: $("#category-description-txt").val()
                    },
                    success: function (data) {
                        if (data.success) {
                            $.notify(data.message, "success");
                            $("#category-modal").modal("hide");
                            reloadDataTable();
                        } else {
                            if (data.error) {
                                $.notify(data.message, "error");
                            } else {
                                $("#category-name-validation-message").html(data.message);
                                $("#category-name-validation-message").show();
                            }
                        }
                    },
                    error: function () {
                        $.notify("Cannot connect to server!", "error");
                    }
                });
            }
        };

        var createSubCategory = function () {
            clearValidationError();
            var name = $("#sub-category-name-txt").val();
            var category = $("#sub-category-category-dropdown").val();
            var valid = true;
            if (name.trim() === "") {
                $("#sub-category-name-validation-message").html("Name is required!");
                $("#sub-category-name-validation-message").show();
                valid = false;
            }
            if (category === "") {
                $("#sub-category-category-validation-message").html("Category is required!");
                $("#sub-category-category-validation-message").show();
                valid = false;
            }

            if (valid) {
                $.ajax({
                    url: "/Manager/ManageSC/CreateSubCategory",
                    dataType: "json",
                    type: "POST",
                    data: {
                        Name: name,
                        Description: $("#sub-category-description-txt").val(),
                        ParentId: category
                    },
                    success: function (data) {
                        if (data.success) {
                            $.notify(data.message, "success");
                            $("#sub-category-modal").modal("hide");
                            reloadDataTable();
                        } else {
                            if (data.error) {
                                $.notify(data.message, "error");
                            } else {
                                $("#sub-category-name-validation-message").html(data.message);
                                $("#sub-category-name-validation-message").show();
                            }
                        }
                    },
                    error: function () {
                        $.notify("Cannot connect to server!", "error");
                    }
                });
            }
        };

        var createItem = function () {
            clearValidationError();
            var name = $("#item-name-txt").val();
            var sub_category = $("#item-sub-category-dropdown").val();
            var valid = true;
            if (name.trim() === "") {
                $("#item-name-validation-message").html("Name is required!");
                $("#item-name-validation-message").show();
                valid = false;
            }
            if (sub_category === "") {
                $("#item-sub-category-validation-message").html("Sub Category is required!");
                $("#item-sub-category-validation-message").show();
                valid = false;
            }

            if (valid) {
                $.ajax({
                    url: "/Manager/ManageSC/CreateItem",
                    dataType: "json",
                    type: "POST",
                    data: {
                        Name: name,
                        Description: $("#item-description-txt").val(),
                        ParentId: sub_category
                    },
                    success: function (data) {
                        if (data.success) {
                            $.notify(data.message, "success");
                            $("#item-modal").modal("hide");
                            reloadDataTable();
                        } else {
                            if (data.error) {
                                $.notify(data.message, "error");
                            } else {
                                $("#item-name-validation-message").html(data.message);
                                $("#item-name-validation-message").show();
                            }
                        }
                    },
                    error: function () {
                        $.notify("Cannot connect to server!", "error");
                    }
                });
            }
        };

        var showEditCategoryModal = function (id) {
            clearModal();
            $.ajax({
                url: "/Manager/ManageSC/GetCategoryDetail",
                dataType: "json",
                type: "GET",
                data: {
                    id: id
                },
                success: function (data) {
                    if (data.success) {
                        $('#category-action-btn').attr("onclick", "editCategory('" + id + "')");
                        $("#category-name-txt").val(data.name);
                        $("#category-description-txt").val(data.description);
                        $("#category-modal").modal('show');
                    } else {
                        if (data.error) {
                            $.notify(data.message, "error");
                        }
                    }
                },
                error: function () {
                    $.notify("Cannot connect to server!", "error");
                }
            });
        };

        var showEditSubCategoryModal = function (id) {
            clearModal();
            $.ajax({
                url: "/Manager/ManageSC/GetSubCategoryDetail",
                dataType: "json",
                type: "GET",
                data: {
                    id: id
                },
                success: function (data) {
                    if (data.success) {
                        var content = '<option value>--Select Category--</option>';
                        for (i = 0; i < data.categories.length; i++) {
                            var row = data.categories[i];
                            content += '<option value="' + row.ID + '">' + row.Name + '</option>';
                        }
                        $("#sub-category-category-dropdown").html(content);
                        $("#sub-category-category-dropdown").val(data.parentId);
                        $("#sub-category-name-txt").val(data.name);
                        $("#sub-category-description-txt").val(data.description);
                        $('#sub-category-action-btn').attr("onclick", "editSubCategory('" + id + "')");
                        $("#sub-category-modal").modal('show');
                    } else {
                        $.notify(data.message, "error");
                    }
                },
                error: function () {
                    $.notify("Cannot connect to server!", "error");
                }
            });
        };

        var showEditItemModal = function (id) {
            clearModal();
            $.ajax({
                url: "/Manager/ManageSC/GetItemDetail",
                dataType: "json",
                type: "GET",
                data: {
                    id: id
                },
                success: function (data) {
                    if (data.success) {
                        var content = '<option value>--Select Sub Category--</option>';
                        for (i = 0; i < data.categories.length; i++) {
                            var row = data.categories[i];
                            content += '<option value="' + row.ID + '">' + row.Name + '</option>';
                        }
                        $("#item-sub-category-dropdown").html(content);
                        $("#item-sub-category-dropdown").val(data.parentId);
                        $("#item-name-txt").val(data.name);
                        $("#item-description-txt").val(data.description);
                        $('#item-action-btn').attr("onclick", "editItem('" + id + "')");
                        $("#item-modal").modal('show');
                    } else {
                        $.notify(data.message, "error");
                    }
                },
                error: function () {
                    $.notify("Cannot connect to server!", "error");
                }
            });
        };

        var editCategory = function (id) {
            clearValidationError();
            var name = $("#category-name-txt").val();
            var valid = true;
            if (name.trim() === "") {
                $("#category-name-validation-message").html("Name is required!");
                $("#category-name-validation-message").show();
                valid = false;
            }
            if (valid) {
                $.ajax({
                    url: "/Manager/ManageSC/EditCategory",
                    dataType: "json",
                    type: "POST",
                    data: {
                        ID: id,
                        Name: name,
                        Description: $("#category-description-txt").val()
                    },
                    success: function (data) {
                        if (data.success) {
                            $.notify(data.message, "success");
                            $("#category-modal").modal("hide");
                            reloadDataTable();
                        } else {
                            if (data.error) {
                                $.notify(data.message, "error");
                            } else {
                                $("#category-name-validation-message").html(data.message);
                                $("#category-name-validation-message").show();
                            }
                        }
                    },
                    error: function () {
                        $.notify("Cannot connect to server!", "error");
                    }
                });
            }
        };

        var editSubCategory = function (id) {
            clearValidationError();
            var name = $("#sub-category-name-txt").val();
            var category = $("#sub-category-category-dropdown").val();
            var valid = true;
            if (name.trim() === "") {
                $("#sub-category-name-validation-message").html("Name is required!");
                $("#sub-category-name-validation-message").show();
                valid = false;
            }
            if (category === "") {
                $("#sub-category-category-validation-message").html("Category is required!");
                $("#sub-category-category-validation-message").show();
                valid = false;
            }

            if (valid) {
                $.ajax({
                    url: "/Manager/ManageSC/EditSubCategory",
                    dataType: "json",
                    type: "POST",
                    data: {
                        ID: id,
                        Name: name,
                        Description: $("#sub-category-description-txt").val(),
                        ParentId: category
                    },
                    success: function (data) {
                        if (data.success) {
                            $.notify(data.message, "success");
                            $("#sub-category-modal").modal("hide");
                            reloadDataTable();
                        } else {
                            if (data.error) {
                                $.notify(data.message, "error");
                            } else {
                                $("#sub-category-name-validation-message").html(data.message);
                                $("#sub-category-name-validation-message").show();
                            }
                        }
                    },
                    error: function () {
                        $.notify("Cannot connect to server!", "error");
                    }
                });
            }
        };

        var editItem = function (id) {
            clearValidationError();
            var name = $("#item-name-txt").val();
            var sub_category = $("#item-sub-category-dropdown").val();
            var valid = true;
            if (name.trim() === "") {
                $("#item-name-validation-message").html("Name is required!");
                $("#item-name-validation-message").show();
                valid = false;
            }
            if (sub_category === "") {
                $("#item-sub-category-validation-message").html("Sub Category is required!");
                $("#item-sub-category-validation-message").show();
                valid = false;
            }

            if (valid) {
                $.ajax({
                    url: "/Manager/ManageSC/EditItem",
                    dataType: "json",
                    type: "POST",
                    data: {
                        ID: id,
                        Name: name,
                        Description: $("#item-description-txt").val(),
                        ParentId: sub_category
                    },
                    success: function (data) {
                        if (data.success) {
                            $.notify(data.message, "success");
                            $("#item-modal").modal("hide");
                            reloadDataTable();
                        } else {
                            if (data.error) {
                                $.notify(data.message, "error");
                            } else {
                                $("#item-name-validation-message").html(data.message);
                                $("#item-name-validation-message").show();
                            }
                        }
                    },
                    error: function () {
                        $.notify("Cannot connect to server!", "error");
                    }
                });
            }
        };

        var showDeleteModal = function (id) {
            $("#delete-btn").attr("onclick", "deleteCategory('" + id + "')");
            $("#delete-modal").modal("show");
        };

        var deleteCategory = function (id) {
            $.ajax({
                url: "/Manager/ManageSC/DeleteCategory",
                dataType: "json",
                type: "POST",
                data: {
                    id: id
                },
                success: function (data) {
                    if (data.success) {
                        $.notify(data.message, "success");
                        $("#delete-modal").modal("hide");
                        reloadDataTable();
                    } else if (!data.success) {
                        $.notify(data.message, "error");
                        $("#delete-modal").modal("hide");
                    }
                },
                error: function () {
                    $.notify(data.message, "error");
                    $("#delete-modal").modal("hide");
                }
            });

        };

        var showTreeViewModal = function () {
            $("#category-treeview-div").jstree({
                "core": {
                    "check_callback": true,
                    "themes": {
                        "stripes": false,
                        "icons": false,
                        "dots": false
                    },
                    "data": {
                        "url": "/Manager/ManageSC/GetCategoryTreeViewData",
                        "type": "GET",
                        "contentType": "application/json; charset=utf-8",
                        //"cache": false,
                        "dataFilter": function (json) {
                            var data = $.parseJSON(json);
                            var nodes = [];
                            for (i = 0; i < data.data.length; i++) {
                                var dataItem = data.data[i];
                                var node = {
                                    "id": dataItem.ID,
                                    "parent": dataItem.ParentId == null ? "#" : dataItem.ParentId,
                                    "text": dataItem.Name,
                                    "state": {
                                        'opened': true,
                                        'selected': false
                                    }
                                };
                                nodes.push(node);
                            }
                            return JSON.stringify(nodes);
                        }
                    }
                }
            });
            $("#treeview-modal").modal("show");
        };
    </script>
}
