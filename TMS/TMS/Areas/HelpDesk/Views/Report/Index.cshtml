@{
    Layout = "~/Areas/HelpDesk/Views/Shared/_TopLayout.cshtml";
    ViewBag.Title = "Report";
}
<style type="text/css">
    .table > thead > tr > th {
        white-space: nowrap;
    }

    .ticket-time {
        margin: 10px 0px 5px 0px;
    }

    .ticket-subject {
        font-size: 16px;
    }

    .label-status {
        display: inline-block;
    }

        .label-status .label {
            display: inline-block;
            min-width: 80px;
            border-radius: unset;
            padding: 5px;
            font-size: 14px;
        }

    .priority-color {
        display: inline-block;
        margin-top: 10px;
        width: 12px;
        height: 12px;
    }

    .overdue {
        background-color: #de1515;
        color: #ffffff;
        margin-left: 15px;
        margin-top: 5px;
        width: 100px;
        padding: 5px 8px;
        text-transform: uppercase;
        text-align: center;
        font-weight: bold;
    }
</style>
<link rel="stylesheet" href="~/Content/css/graph.css" />

<div class="row" id="graph-condition-div">
    <div class="col-xs-8">
        <div class="box box-solid">
            <div class="box-body" id="draw-graph">
                <canvas id="pieChart" width="400" height="200"></canvas>
                <div id="doughnut-legend"></div>
            </div>
        </div>
    </div>
    <div class="col-xs-4">
        <div class="box box-solid">
            <div class="box-body">
                <br />
                <div class="form-horizontal">
                    <!--Dropdown type-->
                    <div class="form-group">
                        <label class="col-sm-4 control-label">Type:</label>
                        <div class="col-sm-8">
                            <select class="form-control" id="dropdownType">
                                <option value="0" selected="selected">All tickets</option>
                                <option value="1">All requests</option>
                                <option value="2">All problems</option>
                                <option value="3">All changes</option>
                                <option value="4">All pending requests</option>
                                <option value="5">All pending problems</option>
                                <option value="6">All pending changes</option>
                            </select>
                        </div>
                    </div>
                    <!--Dropdown By-->
                    <div class="form-group">
                        <label class="col-sm-4 control-label">By:</label>
                        <div class="col-sm-8">
                            <select class="form-control" id="dropdownBy">
                                <option value="0">Mode</option>
                                <option value="1">Category</option>
                                <option value="2">Impact</option>
                                <option value="3">Urgency</option>
                                <option value="4">Priority</option>
                                <option value="5">Group</option>
                                <option value="6" selected="selected">Status</option>
                            </select>
                        </div>
                    </div>
                    <!--Date From-->
                    <div class="form-group">
                        <label class="col-sm-4 control-label">Date From:</label>
                        <div class="col-sm-8">
                            <input type="text" class="form-control datetime" placeholder="DD/MM/YYYY" id="date-from-txt" value="@DateTime.Now.AddMonths(-1).ToShortDateString()">
                        </div>
                    </div>
                    <!--Date to-->
                    <div class="form-group">
                        <label class="col-sm-4 control-label">Date To:</label>
                        <div class="col-sm-8">
                            <input type="datetime" class="form-control datetime" placeholder="DD/MM/YYYY" id="date-to-txt" value="@DateTime.Now.ToShortDateString()">
                        </div>
                    </div>
                    <!--Button Generate Report-->
                    <div class="form-group">
                        <div class="col-sm-offset-4">
                            <button onclick="exportReport()" id="export-report-btn" class="btn btn-primary btn-flat">Export Report</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row" id="data-div">
    <div class="col-xs-12">
        <div class="box box-solid">
            <!-- /.box-header -->
            <div class="box-body">
                <table class="table table-bordered table-hover" id="ticket-table-report">
                    <thead>
                        <tr>
                            <th>Subject</th>
                            <th>Schedule End Date</th>
                            <th>Actual End Date</th>
                            <th>Type</th>
                            <th>Mode</th>
                            <th>Category</th>
                            <th>Impact</th>
                            <th>Urgency</th>
                            <th>Priority</th>
                            <th>Group</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <!-- /.box-body -->
        </div>
        <!-- /.box -->
    </div>
</div>

<div class="modal fade bs-example-modal-sm" id="loading-modal" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Exporting Report</h4>
            </div>
            <div class="modal-body alignCenter">
                <p>We're exporting your report. Please wait...</p>
                <img src="~/Content/img/ajax-loader.gif" />
            </div>
        </div>
    </div>
</div>

<form class="hidden" id="export-report-form" action="/HelpDesk/Report/Export" method="POST">
    <input type="hidden" name="GraphImage" id="graph-txt" />
    <input type="hidden" name="DataImage" id="data-txt" />
</form>

@section Scripts {
    @Scripts.Render("~/bundles/chart")
    <script src="~/Content/js/html2canvas.js"></script>
    <script src="~/Content/Plugins/jquerydownload/jquery.fileDownload.js"></script>
    <script>
        var defaultColors = [
            "#FF6384", "#36A2EB", "#FFCE56", "#f0f8ff", "#a4c639", "#8db600", "#ff9966", "#007fff", "#fae7b5",
            "#000000",
            "#318ce7", "#ace5ee", "#8a2be2", "#1dacd6", "#ffc1cc", "#536872", "#006b3c"
        ];

        function ProcessGraph() {
            $.ajax({
                "url": "/HelpDesk/Report/DrawGraph",
                "method": "POST",
                "data": {
                    type: $("#dropdownType").val(),
                    by: $("#dropdownBy").val(),
                    date_from_select: $("#date-from-txt").val(),
                    date_to_select: $("#date-to-txt").val()
                },
                "success": function (data) {
                    drawChart(data.label, data.data)
                }
            });
        }

        function drawChart(chartLabels, chartData) {
            var numberOfData = 0;
            for (i = 0; i < chartData.length; i++) {
                numberOfData += chartData[i];
            }

            if (numberOfData == 0) {
                $('#pieChart').replaceWith('<div id="pieChart"><center><h2>No data</h2></center></div>');
                return;
            }
            var colors = [];
            for (var i = 0; i < chartLabels.length; i++) {
                colors[i] = defaultColors[i];
            }

            $('#pieChart').replaceWith('<canvas id="pieChart"></canvas>');
            var pieChartCanvas = $("#pieChart").get(0).getContext("2d");
            var options = {
                legend: false,
                elements: {
                    arc: {
                        borderWidth: 0
                    }
                }
            }
            var data = {
                labels: chartLabels, // labels format: ["Red", "Blue", "Yellow", "Green", "Purple", "Orange"],
                datasets: [
                    {
                        data: chartData, // data format: [12, 19, 3, 5, 2, 3]
                        backgroundColor: colors
                    }
                ]
            }
            var pieChart = new Chart(pieChartCanvas,
            {
                type: "doughnut",
                data: data,
                options: options
            });
            $("#doughnut-legend").html(pieChart.generateLegend());

        }

        var ticketTableReport = $("#ticket-table-report")
            .dataTable({
                processing: true,
                serverSide: true,
                paging: false,
                sort: false,
                filter: false,
                ajax: ({
                    url: "/HelpDesk/Report/GetTickets",
                    type: "POST",
                    data: function (d) {
                        d.date_from_select = $("#date-from-txt").val(),
                        d.date_to_select = $("#date-to-txt").val(),
                        d.type = $("#dropdownType").val(),
                        d.by = $("#dropdownBy").val()
                    }
                }),
                autoWidth: false,
                columnDefs: [
                    {
                        "render": function (data, type, row) {
                            var ticketInfo = "";
                            var code = $("<span/>",
                            {
                                "class": "text-muted text-sm",
                                "text": "#" + row.Code
                            })[0].outerHTML;

                            var status = $("<div/>",
                            {
                                "class": "label-status",
                                "html": getStatusLabel(row.Status)
                            })[0].outerHTML;

                            var subject = $("<span/>",
                            {
                                "class": "ticket-subject",
                                "html": row.Subject
                            })[0].outerHTML;

                            var createdTime = $("<span/>",
                            {
                                "html": 'Created time: <span class="text-bold">' + row.CreatedTimeString + '. </span>',
                            })[0].outerHTML;

                            var dueByDate = "";
                            if (row.DueByDateString != "") {
                                var dueByDate = $("<span/>",
                                {
                                    "html": 'Due by date: <span class="text-bold">' + row.DueByDateString + '. </span>',
                                })[0].outerHTML;
                            }

                            var overdueDiv = "";
                            if (row.IsOverdue) {
                                overdueDiv = $("<span/>",
                                {
                                    "class": "overdue",
                                    "html": "Overdue"
                                })[0].outerHTML;
                            }

                            ticketInfo = $("<div/>",
                            {
                                "class": "col-lg-12 col-sm-12",
                                "style": "line-height: 14px",
                                "html": status + '&nbsp;&nbsp;' + subject + '&nbsp;&nbsp;' + code + overdueDiv
                            })[0].outerHTML;

                            var ticketInfoContainer = $("<div/>",
                            {
                                "class": "row ticket-info",
                                "html": ticketInfo
                            })[0].outerHTML;

                            var ticketTimeContainer = $("<div/>",
                            {
                                "class": "row ticket-time",
                                "html": createdTime + dueByDate
                            })[0].outerHTML;

                            return ticketInfoContainer + ticketTimeContainer;
                        },
                        // Subject
                        "targets": 0,
                        "width": "60%"
                    },
                    {
                        "render": function (data, type, row) {
                            return row.ScheduleEndDateString
                        },
                        // Schedule End Date
                        "targets": 1
                    },
                    {
                        "render": function (data, type, row) {
                            return row.ActualEndDateString;
                        },
                        // Actual End Date
                        "targets": 2,
                    },
                    {
                        "render": function (data, type, row) {
                            return row.TypeString;
                        },
                        // Type
                        "targets": 3
                    },
                    {
                        "render": function (data, type, row) {
                            return row.ModeString;
                        },
                        // Mode
                        "targets": 4,
                        "visible": false
                    },
                    {
                        "render": function (data, type, row) {
                            return row.Category;
                        },
                        // Category
                        "targets": 5,
                        "visible": false
                    },
                    {
                        "render": function (data, type, row) {
                            return row.Impact;
                        },
                        // impact
                        "targets": 6,
                        "visible": false
                    },
                    {
                        "render": function (data, type, row) {
                            return row.Urgency;
                        },
                        // Urgency
                        "targets": 7,
                        "visible": false
                    },
                    {
                        "render": function (data, type, row) {
                            return row.Priority;
                        },
                        //  Priority
                        "targets": 8,
                        "visible": false
                    },
                    {
                        "render": function (data, type, row) {
                            return row.Group;
                        },
                        // Group
                        "targets": 9,
                        "visible": false
                    }
                ]
            });

        var reloadDataTable = function () {
            var oTable = $("#ticket-table-report").dataTable();
            oTable.api().ajax.reload();
        };
        $("#dropdownType").on("change", function () {
            ProcessGraph();
            reloadDataTable();
        });

        var resetVisibleColumns = function () {
            var column = $("#ticket-table-report").dataTable().api().column("4");
            column.visible(false);
            column = $("#ticket-table-report").dataTable().api().column("5");
            column.visible(false);
            column = $("#ticket-table-report").dataTable().api().column("6");
            column.visible(false);
            column = $("#ticket-table-report").dataTable().api().column("7");
            column.visible(false);
            column = $("#ticket-table-report").dataTable().api().column("8");
            column.visible(false);
            column = $("#ticket-table-report").dataTable().api().column("9");
            column.visible(false);
        }

        $("#dropdownBy").on("change", function () {
            ProcessGraph();
            var byValue = $(this).val();
            resetVisibleColumns();
            switch (byValue) {
                case "0": // Mode
                    var column = $("#ticket-table-report").dataTable().api().column("4");
                    column.visible(true);
                    break;
                case "1": // Category
                    var column = $("#ticket-table-report").dataTable().api().column("5");
                    column.visible(true);
                    break;

                case "2": //impact
                    var column = $("#ticket-table-report").dataTable().api().column("6");
                    column.visible(true);
                    break;

                case "3": //Urgency
                    var column = $("#ticket-table-report").dataTable().api().column("7");
                    column.visible(true);
                    break;

                case "4": // Priority
                    var column = $("#ticket-table-report").dataTable().api().column("8");
                    column.visible(true);
                    break;

                case "5": // Group
                    var column = $("#ticket-table-report").dataTable().api().column("9");
                    column.visible(true);
                    break;
            }
        });

        $("#date-from-txt").on("change",
                function () {
                    ProcessGraph();
                    reloadDataTable();
                });

        $("#date-to-txt").on("change",
                function () {
                    ProcessGraph();
                    reloadDataTable();
                });

        $(document).ready(function () {
            ProcessGraph();
        });

        var exportReport = function () {
            $("#export-report-btn").prop("disabled", true);
            var graph_condition_div = document.getElementById("graph-condition-div");
            var data_div = document.getElementById("data-div");
            $("#loading-modal").modal('show');
            html2canvas(graph_condition_div, {
                onrendered: function (graph_condition_canvas) {
                    html2canvas(data_div, {
                        onrendered: function (data_canvas) {

                            $("#graph-txt").val(graph_condition_canvas.toDataURL("image/png"));
                            $("#data-txt").val(data_canvas.toDataURL("image/png"));
                            $.fileDownload($("#export-report-form").attr('action'), {
                                successCallback: function (url) {
                                    $("#loading-modal").modal('hide');
                                },
                                failMessageHtml: "There was a problem generating your report, please try again.",
                                httpMethod: "POST",
                                data: $("#export-report-form").serialize()
                            });
                            $("#export-report-btn").prop("disabled", false);
                        }
                    });
                }
            });
        }
    </script>
}