@using TMS.Models;
@using TMS.Utils;
@model TMS.ViewModels.TicketSolveViewModel
@{
    ViewBag.Title = "Solve Ticket";
}
@{
    if (ViewBag.Role == "Technician")
    {
        Layout = "~/Areas/Technician/Views/Shared/_Layout.cshtml";
    }
    else
    {
        Layout = "~/Areas/HelpDesk/Views/Shared/_Layout.cshtml";
    }

}
<style>
    .nav-stacked > li {
        border-bottom: 1px solid #f4f4f4;
        margin: 0;
    }

    .editable {
        display: block;
        padding: 9.5px;
        margin: 0 0 10px;
        font-size: 14px;
        line-height: 1.42857143;
        word-wrap: break-word;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .solution-subject {
        cursor: pointer;
    }

    .solution-content {
        white-space: pre-wrap;
    }

    .timeline > li > .timeline-item {
        margin-left: 0px;
        margin-right: 0px;
    }

    h4, h5 {
        color: #345aaa;
        font-weight: bold;
    }

    .header-content {
        border-bottom: 1px solid #a6c6e9;
        padding: 20px 0px 0px 30px;
        margin-bottom: 5px;
    }

    .row-content {
        padding: 5px 0px;
    }

    .datetimerow {
        line-height: 20px;
    }

    input, textarea {
        max-width: 800px;
    }

    .pre-wrap {
        white-space: pre-wrap;
    }

    .button {
        text-align: center;
    }

    .border-button {
        border-right: 1px solid #939393;
    }

    .row-button {
        text-align: center;
        margin-left: 15px;
        width: 70px;
    }
</style>
<div class="row">
    <div class="col-md-12">
        <div class="box box-solid">
            <div class="box-body ticket-contents">
                <div class="col-sm-12 header-content">
                    <h4><i class="fa fa-info-circle"></i>  Detail</h4>
                </div>
                <div class="col-sm-12 row-content">
                    <div class="col-sm-6 col-content ">
                        <div class="col-sm-4 labels">
                            <b>Created by: </b>
                        </div>
                        <div class="col-sm-8">@Html.DisplayFor(model => model.CreatedBy)</div>
                    </div>
                    <div class="col-sm-6 col-content ">
                        <div class="col-sm-4 labels">
                            <b>Type: </b>
                        </div>
                        <div class="col-sm-8">@Html.DisplayFor(model => model.Type)</div>
                    </div>
                </div>
                <div class="col-sm-12 row-content">
                    <div class="col-sm-6 col-content ">
                        <div class="col-sm-4 labels">
                            <b>Assigned by: </b>
                        </div>
                        <div class="col-sm-8">@Html.DisplayFor(model => model.AssignedBy)</div>
                    </div>
                    <div class="col-sm-6 col-content ">
                        <div class="col-sm-4 labels">
                            <b>Mode: </b>
                        </div>
                        <div class="col-sm-8">@Html.DisplayFor(model => model.Mode)</div>
                    </div>
                </div>
                <div class="col-sm-12 row-content">
                    <div class="col-sm-6 col-content ">
                        <div class="col-sm-4 labels">
                            <b>Category: </b>
                        </div>
                        <div class="col-sm-8">@Html.DisplayFor(model => model.Category)</div>
                    </div>
                    <div class="col-sm-6 col-content ">
                        <div class="col-sm-4 labels">
                            <b>Status:  </b>
                        </div>
                        <div class="col-sm-8">@Html.DisplayFor(model => model.Status)</div>
                    </div>
                </div>
                <div class="col-sm-12 row-content">
                    <div class="col-sm-6 col-content ">
                        <div class="col-sm-4 labels">
                            <b>Impact: </b>
                        </div>
                        <div class="col-sm-8">@Html.DisplayFor(model => model.Impact)</div>
                    </div>
                    <div class="col-sm-6 col-content ">
                        <div class="col-sm-4 labels">
                            <b>Urgency: </b>
                        </div>
                        <div class="col-sm-8">@Html.DisplayFor(model => model.Urgency)</div>
                    </div>
                </div>
                <div class="col-sm-12 row-content">
                    <div class="col-sm-6 col-content ">
                        <div class="col-sm-4 labels">
                            <b>Impact Detail: </b>
                        </div>
                        <div class="col-sm-8">@Html.DisplayFor(model => model.ImpactDetail)</div>
                    </div>
                    <div class="col-sm-6 col-content ">
                        <div class="col-sm-4 labels">
                            <b>Priority: </b>
                        </div>
                        <div class="col-sm-8">@Html.DisplayFor(model => model.Priority)</div>
                    </div>
                </div>
                <div class="col-sm-12 header-content">
                    <h4><i class="fa fa-clock-o"></i>  Date and time</h4>
                </div>
                <div class="col-sm-12 row-content">
                    <div class="col-sm-6">
                        <div class="col-sm-4 labels">
                            <b>Created date: </b>
                        </div>
                        <div class="col-sm-8 datetimerow">@Html.DisplayFor(model => model.CreateTime)</div>
                    </div>
                    <div class="col-sm-6">
                        <div class="col-sm-4 labels">
                            <b>Last modified date: </b>
                        </div>
                        <div class="col-sm-8 datetimerow">@Html.DisplayFor(model => model.ModifiedTime)</div>
                    </div>
                </div>
                <div class="col-sm-12 row-content">
                    <div class="col-sm-6">
                        <div class="col-sm-4 labels">
                            <b>Scheduled start time: </b>
                        </div>
                        <div class="col-sm-8 datetimerow">@Html.DisplayFor(model => model.ScheduleStartTime)</div>
                    </div>
                    <div class="col-sm-6 ">
                        <div class="col-sm-4 labels">
                            <b>Schedule end time: </b>
                        </div>
                        <div class="col-sm-8 datetimerow">@Html.DisplayFor(model => model.ScheduleEndTime)</div>
                    </div>
                </div>
                <div class="col-sm-12 row-content">
                    <div class="col-sm-6 ">
                        <div class="col-sm-4 labels">
                            <b>Actual start time: </b>
                        </div>
                        <div class="col-sm-8 datetimerow">@Html.DisplayFor(model => model.ActualStartTime)</div>
                    </div>
                    <div class="col-sm-6 ">
                        <div class="col-sm-4 labels">
                            <b>Actual end time: </b>
                        </div>
                        <div class="col-sm-8 datetimerow">@Html.DisplayFor(model => model.ActualEndTime)</div>
                    </div>
                </div>
                <div class="col-sm-12 header-content">
                    <h4><i class="fa fa-file-text"></i>  Information</h4>
                </div>
                <div class="col-sm-12 row-content ">
                    <div class="col-sm-12">
                        <div class="col-sm-2 labels">
                            <b>Subject: </b>
                        </div>
                        <div class="col-sm-10" id="Subject">@Html.DisplayFor(model => model.Subject)</div>
                    </div>
                </div>
                <div class="col-sm-12 row-content ">
                    <div class="col-sm-12">
                        <div class="col-sm-2 labels">
                            <b>Description: </b>
                        </div>
                        <div class="col-sm-10 pre-wrap">@Html.DisplayFor(model => model.Description)</div>
                    </div>
                </div>
                <div class="col-sm-12 row-content ">
                    <div class="col-sm-12">
                        <div class="col-sm-2 labels">
                            <b>Attachment: </b>
                        </div>
                        <div class="col-sm-10 pre-wrap">@Html.DisplayFor(model => model.AttachmentURL)</div>
                    </div>
                </div>
                <div class="col-sm-12 row-content ">
                    <div class="col-sm-12">
                        <div class="col-sm-2 labels">
                            <b>Solved by:  </b>
                        </div>
                        <div class="col-sm-10">@Html.DisplayFor(model => model.SolvedBy)</div>
                    </div>
                </div>

                <input type="hidden" id="ticketId" value="@Model.ID" />
                <div class="col-sm-12 row-content ">
                    <div class="col-sm-12">
                        <div class="col-sm-2 labels">
                            <b>Solution: </b>
                        </div>
                        <div class="col-sm-10">
                            @Html.TextAreaFor(m => m.Solution, new { @class = "form-control", id = "new-solution", rows = "8" })
                            @Html.ValidationMessageFor(m => m.Solution, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-12 row-content ">
                    <div class="col-sm-12">
                        <div class="col-sm-2">
                        </div>
                        <div class="col-sm-10">
                            <a id="refer-solution" href="javascript:openReferKnowledgebaseModal()">Refer knowledge base</a>
                        </div>
                    </div>
                </div>
                <div class="col-sm-12">
                    <hr />
                </div>
                <div class="row" style="text-align: center;">
                    <div class="col-sm-12" style="padding: 0px">
                        <input type="button" id="solveBtn" class="btn btn-primary btn-flat row-button" value="Solve" name="command" />

                        <input type="button" id="saveBtn" class="btn btn-success btn-flat row-button" value="Save" name="command" />

                        @if (ViewBag.Role == "Technician")
                        {
                            @Html.Raw("<a class='btn btn-default btn-flat row-button' href='" + Url.Action("Index", "ManageTicket", new { Area = "Technician" }) + "'>Cancel</a>")
                        }
                        else
                        {
                            @Html.Raw("<a class='btn btn-default btn-flat' class='row-button' href='" + Url.Action("Index", "ManageTicket", new { Area = "HelpDesk" }) + "'>Cancel</a>")
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="modal-refer-knowledgebase" class="modal fade" aria-hidden="true" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Knowledge Base</h4>
            </div>
            <div class="modal-body" style="background-color: #ecf0f5; height: 500px; overflow-y: auto;">
                <a style="padding: 10px;">
                    <div class="input-group">
                        <input type="text" id="solution-search" placeholder="Type something ..." class="form-control">
                        <span class="input-group-btn">
                            <button type="button" id="search-btn" class="btn btn-warning btn-flat">Search</button>
                        </span>
                    </div>
                </a>
                <ul id="result-list" class="nav nav-pills nav-stacked timeline solution-result"></ul>
            </div>
            <div class="modal-footer" style="text-align: center;">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->

@section scripts{
    <script>



        $("#search-btn")
            .on("click",
                function () {
                    $.ajax({
                        "url": "/Ticket/SearchSolution/",
                        "method": "POST",
                        "data": {
                            searchtxt: $("#solution-search").val()
                        },
                        "success": function (data) {
                            if (data.success) {
                                $('#result-list').empty();
                                if (data.data.length == 0) {
                                    $('#result-list').append('<li>No result.</li>');
                                }
                                $.each(data.data,
                                    function (index, element) {
                                        $('#result-list')
                                            .append('<li><div class="timeline-item"><a class="time text-green solution-refer" href="javascript:insertURL('
                                                //+ element.URL
                                                + ')">Refer</a><h3 class="timeline-header no-border"><a class="solution-subject" data-id="'
                                                + element.Id + '">' + element.Subject
                                                + '</a></h3><div class="timeline-body" style="display:none;"><div contentEditable="true" class="solution-content editable"></div></div></div></li>');
                                        //$('#result-list')
                                        //        .append('<li><div class="timeline-item"><a class="time text-green solution-refer" href="javascript:insertURL('
                                        //        //+ element.URL
                                        //        + ')">Refer</a><h3 class="timeline-header no-border"><a class="solution-subject" data-id="'
                                        //        + element.Id + '">' + element.Subject
                                        //        + '</a></h3><div class="timeline-body" style="display:none;"><pre class="solution-content" style="font-weight: 600;"></pre></div></div></li>');

                                    });
                            } else {
                                //
                            }
                        },
                        "error": function (e) {
                            noty({
                                text: "Some error occured. Please try again later!",
                                type: "error",
                                layout: "topRight",
                                timeout: 2000
                            });
                        }
                    });
                });

        $('#result-list').on('click', 'a[class="solution-subject"]', function (e) {
            var index = $(".solution-subject").index(this);
            var contentBox = $(".timeline-body").eq(index);
            var content = $(".solution-content").eq(index);
            if (contentBox.is(":hidden")) {
                $.ajax({
                    "url": "/Ticket/GetSolutionContent/",
                    "method": "POST",
                    "data": {
                        id: $(this)[0].getAttribute("data-id")
                    },
                    "success": function (data) {
                        if (data.success) {
                            content.html(data.data);
                            //content.text(data.data.replace(/\r\n/g, EOL));
                        } else {
                            content.text("No solution.");
                        }
                        $(".timeline-body").hide();
                        contentBox.toggle();
                    },
                    "error": function (e) {
                        noty({
                            text: "Some error occured. Please try again later!",
                            type: "error",
                            layout: "topRight",
                            timeout: 2000
                        });
                    }
                });
            } else {
                contentBox.toggle();
            }
        });

        function insertURL(url) {
            // blah blah
            var messUrl = "http://tms.com/KB/1";
            $("#new-solution").html($("#new-solution").val() + '&#13' + messUrl);
            noty({
                text: 'Solution\'s link is inserted!',
                layout: "topCenter",
                type: "success",
                timeout: 2000
            });
        };

        function openReferKnowledgebaseModal() {
            $("#solution-search").val($("#Subject")[0].innerHTML);
            $("#modal-refer-knowledgebase").modal("show");
            $("#search-btn").click();
        }

        $("#solution-search").keyup(function(e) {
            $("#search-btn").click();
        });

        $("#solveBtn, #saveBtn")
            .on("click",
                function () {
                    $.ajax({
                        "url": "/Ticket/SolveTicket/",
                        "method": "POST",
                        "data": {
                            id: $("#ticketId").val(),
                            solution: $("#new-solution").val(),
                            command: $(this)[0].id
                        },
                        success: function (data) {
                            if (!data.success) {
                                noty({
                                    text: data.msg,
                                    layout: "topCenter",
                                    type: "error",
                                    timeout: 2000
                                });
                            } else {
                                noty({
                                    text: data.msg,
                                    layout: "topCenter",
                                    type: "success",
                                    timeout: 2000
                                });
                                if (data.userRole == "Helpdesk") {
                                    setTimeout(function () {
                                        window.location.href = "/HelpDesk/ManageTicket/";
                                    },
                                        1000);
                                } else if (data.userRole == "Technician") {
                                    setTimeout(function () {
                                        window.location.href = "/Technician/ManageTicket/";
                                    },
                                        1000);
                                }
                            }
                        }
                    });
                });
    </script>
}
