@model TMS.Models.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password";
    string UserRole = ViewBag.UserRole;
    switch (UserRole)
    {
        case "Technician": Layout = "~/Areas/Technician/Views/Shared/_TopLayout.cshtml"; break;
        case "Helpdesk": Layout = "~/Areas/HelpDesk/Views/Shared/_TopLayout.cshtml"; break;
        case "Manager": Layout = "~/Areas/Manager/Views/Shared/_TopLayout.cshtml"; break;
        case "Admin": Layout = "~/Areas/Admin/Views/Shared/_TopLayout.cshtml"; break;
        default: Layout = "~/Views/Shared/_TopLayout.cshtml"; break;
    }
}

<link rel="stylesheet" type="text/css" href="~/Content/custom-css/profile.css">

<style>
    input {
        max-width: 390px;
    }
    
</style>

@using (Html.BeginForm("ChangePassword", "Profile", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <div class="form-horizontal">
        <div class="row">
            <div class="col-xs-offset-3 col-xs-7">
                <div class="div-container">
                    <div class="col-xs-offset-1 box-body large-text-container profileInfo">
                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            @Html.LabelFor(m => m.OldPassword, new { @class = "col-md-4 control-label" })
                            <div class="col-md-7">
                                @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-4 control-label" })
                            <div class="col-md-7">
                                @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-4 control-label" })
                            <div class="col-md-7">
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="pull-left">@Html.ValidationSummary("", new { @class = "text-white" })</div>
                                <div class="text-center">
                                    <input type="submit" value="Save password" class="btn btn-transparent btn-flat" />
                                    @switch ((string)ViewBag.Role)
                                    {
                                        case "admin":
                                            @Html.ActionLink("Cancel", "Index", new { area = "Admin" }, new { @class = "btn btn-transparent btn-flat" })
                                            break;
                                        case "helpdesk":
                                            @Html.ActionLink("Cancel", "Index", new { area = "Helpdesk" }, new { @class = "btn btn-transparent btn-flat" })
                                            break;
                                        case "technician":
                                            @Html.ActionLink("Cancel", "Index", new { area = "Technician" }, new { @class = "btn btn-transparent btn-flat" })
                                            break;
                                        case "requester":
                                            @Html.ActionLink("Cancel", "Index", new { area = "" }, new { @class = "btn btn-transparent btn-flat" })
                                            break;
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>


}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
